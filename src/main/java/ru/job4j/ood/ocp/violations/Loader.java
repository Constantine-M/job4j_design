package ru.job4j.ood.ocp.violations;

/**
 * Данный класс является примером
 * нарушения OCP. Пример очень простой, но важный.
 *
 * Нарушением здесь является то, что
 * поля класса прописаны без модификатора "private".
 * То есть эти поля могут быть изменены в другом месте
 * или, например, этими полями может воспользоваться другой
 * разработчик при проектировке нового функционала.
 *
 * Выдержка из статьи:
 * "Это одна из наиболее устойчивых конвенций ООП.
 * Переменные-члены должны быть известны только методам
 * класса, в котором они определены. Переменные члены
 * не должны быть известны никаким другим классам,
 * включая классы-наследники. Поэтому они должны быть
 * объявлены с модификатором доступа private, а не
 * public или protected.
 *
 * В свете принципа открытости-закрытости причина такой
 * конвенции понятна. Когда переменные — члены класса
 * меняются, каждая функция, зависящая от них, должна
 * измениться. То есть функция не закрыта от изменений
 * этих переменных."
 */
public class Loader {

    byte progress;

    boolean status;

    public Loader(byte progress, boolean status) {
        this.progress = progress;
        this.status = status;
    }

    public byte getProgress() {
        return progress;
    }

    public void setProgress(byte progress) {
        this.progress = progress;
    }

    public boolean isStatus() {
        return status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }
}
