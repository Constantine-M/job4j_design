package ru.job4j.ood.tdd;

import java.util.Calendar;
import java.util.List;
import java.util.function.Predicate;

/**
 * Данный интерфейс описывает
 * кинотеатр.
 *
 * Основными методами и общими
 * для всех кинотеатров:
 * 1.Добавить сеанс.
 * 2.Купить билет.
 * 3.Найти сеанс.
 * и т.д.
 *
 * Один из подходов создания программы -
 * это начать описывать поведение системы
 * через тесты. В таком подходе мы
 * фокусируемся на возможности системы,
 * а не на ее реализацию. Любую систему
 * можно описать через интерфейсы
 * взаимодействия.
 *
 * Такой поход называется программирование
 * через тесты - Test Driven Development.
 */
public interface Cinema {

    /**
     * Данный метод находит сеанс,
     * подходящий под условия.
     *
     * @param filter условие нахождения сеанса.
     * @return сеанс {@link Session}.
     */
    List<Session> find(Predicate<Session> filter);

    /**
     * Данный метод описывает
     * покупку билета. Для этого
     * потребуется ввести пользователя,
     * строку и колонку, а также
     * дату сеана.
     *
     * Строка и колонка как-то связаны с
     * выбором фильма.
     * @param account пользовтель.
     * @param row ряд в зале.
     * @param column место в зале.
     * @param date дата сеанса.
     * @return билет на сеанс.
     */
    Ticket buy(Account account, int row, int column, Calendar date);

    /**
     * Данный метод добавляет сеанс
     * в список сеансов.
     * @param session сеанс.
     */
    void add(Session session);
}
